<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ChSHXwAAAABJRU5ErkJggg==
</value>
  </data>
</root>